# Default values for druid.

image:
  repository: apache/incubator-druid
  tag: 0.16.1-incubating
  pullPolicy: IfNotPresent

env:
  druid.coordinator.asOverlord.enabled: true
  DRUID_USE_CONTAINER_IP: true
  # druid_zk_service_host: izac-cp-zookeeper-headless:2181
  # # druid_metadata_storage_host: ""
  # druid_metadata_storage_type: postgresql
  # druid_metadata_storage_connector_connectURI: jdbc:postgresql://izac-postgresql-headless:5432/druid
  # druid_metadata_storage_connector_user: druid
  # druid_metadata_storage_connector_password: FoolishPassword
  # druid_extensions_loadList:
  #   - druid-histogram
  #   - druid-datasketches

securityContext:
  runAsUser: 0
  fsGroup: 1000

broker:
  name: broker
  replicaCount: 1
  port: 8082
  serviceType: ClusterIP

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    path: /
    hosts:
      - chart-example.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: "4Gi"
    #storageClass: "standard"

  antiAffinity: "soft"

  nodeAffinity: {}

  nodeSelector: {}

  tolerations: []

  resources: {}

  ## (dict) If specified, apply these annotations to each master Pod
  podAnnotations: {}
  #   example: master-foo

  podDisruptionBudget:
    enabled: false
    # minAvailable: 2
    maxUnavailable: 1

  updateStrategy:
    type: RollingUpdate


coordinator:
  name: coordinator
  replicaCount: 1
  port: 8081
  serviceType: ClusterIP


  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    path: /
    hosts:
      - chart-example.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: "30Gi"
    #storageClass: "standard"

  antiAffinity: "soft"

  nodeAffinity: {}

  nodeSelector: {}

  tolerations: []

  resources: {}

  ## (dict) If specified, apply these annotations to each master Pod
  podAnnotations: {}
  #   example: master-foo

  podDisruptionBudget:
    enabled: false
    # minAvailable: 2
    maxUnavailable: 1

  updateStrategy:
    type: RollingUpdate





historical:
  name: historical
  replicaCount: 1
  port: 8083
  serviceType: ClusterIP


  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    path: /
    hosts:
      - chart-example.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: "4Gi"
    #storageClass: "standard"

  antiAffinity: "soft"

  nodeAffinity: {}

  nodeSelector: {}

  tolerations: []

  resources: {}

  ## (dict) If specified, apply these annotations to each master Pod
  podAnnotations: {}
  #   example: master-foo

  podDisruptionBudget:
    enabled: false
    # minAvailable: 2
    maxUnavailable: 1

  updateStrategy:
    type: RollingUpdate

middleManager:
  name: middle-manager
  replicaCount: 1
  port: 8091
  serviceType: ClusterIP


  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    path: /
    hosts:
      - chart-example.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: "10Gi"
    #storageClass: "standard"

  antiAffinity: "soft"

  nodeAffinity: {}

  nodeSelector: {}

  tolerations: []

  resources: {}

  ## (dict) If specified, apply these annotations to each master Pod
  podAnnotations: {}
  #   example: master-foo

  podDisruptionBudget:
    enabled: false
    # minAvailable: 2
    maxUnavailable: 1

  updateStrategy:
    type: RollingUpdate


router:
  name: router
  replicaCount: 1
  port: 8888
  
  serviceType: NodePort
  nodePort: 30888

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    path: /
    hosts:
      - chart-example.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: "4Gi"
    #storageClass: "standard"

  antiAffinity: "soft"

  nodeAffinity: {}

  nodeSelector: {}

  tolerations: []

  resources: {}

  ## (dict) If specified, apply these annotations to each master Pod
  podAnnotations: {}
  #   example: master-foo

  podDisruptionBudget:
    enabled: false
    # minAvailable: 2
    maxUnavailable: 1

  updateStrategy:
    type: RollingUpdate






